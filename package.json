{
  "name": "collabnest-backend",
  "version": "1.0.0",
  "description": "collabnest-backend/\r ├── .env                       # Environment variables (DB URL, API keys, etc.)  \r ├── .gitignore                 # Specifies intentionally untracked files that Git should ignore  \r ├── README.md                  # Project description, setup instructions, etc.  \r ├── package.json               # Node.js project configuration  \r ├── package-lock.json          # Records the exact versions of dependencies  \r ├── index.js                   # Main server file (entry point)  \r ├── firebase-admin.js          # Firebase Admin SDK initialization  \r ├── prisma/                    # Prisma ORM configuration  \r │   ├── schema.prisma          # Database schema definition  \r │   └── migrations/            # Database migrations  \r ├── src/                       # Source code directory  \r │   ├── middleware/           # Middleware functions  \r │   │   ├── authMiddleware.js  # Authentication middleware (RBAC)  \r │   │   └── errorMiddleware.js # Error handling middleware  \r │   ├── routes/               # API route definitions  \r │   │   ├── authRoutes.js      # Authentication routes  \r │   │   ├── projectRoutes.js   # Project-related routes  \r │   │   ├── userRoutes.js      # User-related routes  \r │   │   ├── taskRoutes.js      # Task-related routes  \r │   │   └── meetingRoutes.js   # Google Meet/Zoom API routes  \r │   ├── controllers/          # Route handlers (business logic)  \r │   │   ├── authController.js  # Authentication controllers  \r │   │   ├── projectController.js# Project controllers  \r │   │   ├── userController.js  # User controllers  \r │   │   ├── taskController.js  # Task controllers  \r │   │   └── meetingController.js# Meeting controllers  \r │   ├── models/               # Prisma models  \r │   │   ├── User.js            # User model  \r │   │   ├── Project.js         # Project model  \r │   │   ├── Task.js            # Task model  \r │   │   └── Comment.js         # Comment model  \r │   ├── services/             # Reusable services  \r │   │   ├── recommendationService.js # Recommendation engine  \r │   │   ├── notificationService.js  # Notification service (Email, WhatsApp)  \r │   │   └── certificateService.js  # Certificate generation service\r │   ├── utils/                # Utility functions\r │   │   └── helpers.js         # Helper functions\r │   └── config/               # Configuration files\r │       └── firebaseConfig.js # Firebase configuration\r ├── tests/                     # Test files",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1",
    "start": "node index.js"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/AAnimeshTripathy/CollabNest-backend.git"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "type": "commonjs",
  "bugs": {
    "url": "https://github.com/AAnimeshTripathy/CollabNest-backend/issues"
  },
  "homepage": "https://github.com/AAnimeshTripathy/CollabNest-backend#readme",
  "dependencies": {
    "@faker-js/faker": "^9.6.0",
    "@prisma/client": "^6.4.1",
    "bcrypt": "^5.1.1",
    "bcryptjs": "^3.0.2",
    "body-parser": "^1.20.3",
    "cors": "^2.8.5",
    "dotenv": "^16.4.7",
    "express": "^4.21.2",
    "firebase-admin": "^13.2.0",
    "jsonwebtoken": "^9.0.2",
    "nodemon": "^3.1.9",
    "pg": "^8.13.3",
    "pg-hstore": "^2.3.4",
    "sequelize": "^6.37.5",
    "sequelize-cli": "^6.6.2"
  },
  "devDependencies": {
    "prisma": "^6.4.1"
  }
}
